---
const { class: className } = Astro.props;
---

<div
  id="themeToggle"
  class={`aspect-square flex justify-center items-center size-6 ${className}`}
>
  <svg
    id="themeToggleLight"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <circle cx="12" cy="12" r="4"></circle>
    <path d="M12 4h.01"></path>
    <path d="M20 12h.01"></path><path d="M12 20h.01"></path>
    <path d="M4 12h.01"></path>
    <path d="M17.657 6.343h.01"></path>
    <path d="M17.657 17.657h.01"></path>
    <path d="M6.343 17.657h.01"></path>
    <path d="M6.343 6.343h.01"></path>
  </svg>
  <svg
    id="themeToggleDark"
    xmlns="http://www.w3.org/2000/svg"
    width="18"
    height="18"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
  </svg>
</div>

<script is:inline>
  /** @typedef {'system' | 'dark' | 'light'} Theme */

  /** @return {Theme} */
  const getTheme = () => {
    return localStorage?.getItem("theme") ?? "system";
  };

  /** @param {Theme} theme */
  const setTheme = (theme) => {
    if (theme === "system") {
      const isDarkMode = window.matchMedia(
        "(prefers-color-scheme: dark)",
      ).matches;
      theme = isDarkMode ? "dark" : "light";
    }

    if (theme === "light") {
      document.documentElement.removeAttribute("data-theme");
      document.getElementById("themeToggleLight").classList = "";
      document.getElementById("themeToggleDark").classList = "hidden";
    } else {
      document.documentElement.setAttribute("data-theme", "dark");
      document.getElementById("themeToggleLight").classList = "hidden";
      document.getElementById("themeToggleDark").classList = "";
    }
  };

  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (e) => {
      if (getTheme() !== "system") return;
      setTheme(e.matches ? "dark" : "light");
    });

  document.getElementById("themeToggle")?.addEventListener("click", () => {
    const isDarkMode =
      document.documentElement.getAttribute("data-theme") === "dark";
    currentTheme = isDarkMode ? "light" : "dark";
    setTheme(currentTheme);
  });

  let currentTheme = getTheme();
  setTheme(currentTheme);
</script>
